import requests
import random
import string
import os

from requests_toolbelt.multipart.encoder import MultipartEncoder
from utils.utils import is_vulnerable

class C4_IncreaseSize:
    def execute(file_upload_url):
        headers, encoder = C4_IncreaseSize.get_requests()

        response = requests.post(file_upload_url, data=encoder, headers=headers)
        status = "Vulnerable" if is_vulnerable(response.text, response.status_code) else "Not Vulnerable"

        encoder.fields["image"][1].close()
        
        return {
            "ID": "C4",
            "Name": "Increasing File Size",
            "Score": "8.2",
            "Severity": "High",
            "Status": status,
        }
    
    def get_requests():
        user_agent = os.getenv("USER_AGENT")
        image_path = "./resources/test.png"
        modified_image_path = "./resources/modified/C4_modified_test.png"
        boundary = '----WebKitFormBoundary' + ''.join(random.sample(string.ascii_letters + string.digits, 16))

        with open(modified_image_path, "wb") as modified_image:
            with open(image_path, "rb") as image:
                modified_image.write(image.read()*10000)
                image.close()
            modified_image.close()
            
        encoder = MultipartEncoder(
            fields={'image': ('C4_modified_test.png', open(modified_image_path, 'rb'), 'image/png'), "submit": "submit"},
            boundary=boundary,
        )
        headers = {'Content-Type': encoder.content_type, 'User-Agent': user_agent, "Connection": "keep-alive"}

        return headers, encoder