import requests
import random
import string
import os

from requests_toolbelt.multipart.encoder import MultipartEncoder
from utils.utils import is_vulnerable

class C6_FileExtension:    
    def execute(file_upload_url):
        filenames = [
            "seed.html.png",
            "seed.html;png",
            "seed.html.aabbcc",
            "seed.shtml",
            "seed.phtml",
            "seed.hTml",
            "seed.html...........",
            "seed.html%00.png",
            "seed.php3",
            "seed.php4",
            "seed.ufu"
            "seed"
        ]

        for filename in filenames:
            headers, encoder = C6_FileExtension.get_requests(filename)
            
            response = requests.post(file_upload_url, data=encoder, headers=headers)
            status = "Vulnerable" if is_vulnerable(response.text, response.status_code) else "Not Vulnerable"
            
            encoder.fields["image"][1].close()

            if status == "Vulnerable":
                break

        return {
            "ID": "C6",
            "Name": "Modify File Extension",
            "Score": "6.3",
            "Severity": "Medium",
            "Status": status,
        }
    
    def get_requests(filename):
        user_agent = os.getenv("USER_AGENT")
        seed_path = "./resources/seed.html"
        boundary = '----WebKitFormBoundary' + ''.join(random.sample(string.ascii_letters + string.digits, 16))

        encoder = MultipartEncoder(
            fields={'image': (filename, open(seed_path, 'rb'), 'text/plain'), "submit": "submit"},
            boundary=boundary,
        )
        headers = {'Content-Type': encoder.content_type, 'User-Agent': user_agent, "Connection": "keep-alive"}

        return headers, encoder

