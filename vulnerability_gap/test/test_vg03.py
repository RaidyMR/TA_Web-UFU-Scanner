import unittest
import os

from utils.request import get_request
from vulnerability_gap.vg3 import VG3_InsertHTMLtoPNG

class TestVG3(unittest.TestCase):
    def test_modify_encoder(self):
        seed_path = "./resources/seed.html"
        image_path = "./resources/test.png"
        modified_seed_path = "./resources/modified/VG3_modified_test.png"
        
        headers, encoder = get_request()
        modified_encoder = VG3_InsertHTMLtoPNG.modify_encoder(encoder)

        self.assertEqual(headers["Connection"], "keep-alive")
        self.assertEqual(headers["User-Agent"], os.getenv("USER_AGENT"))
        self.assertEqual(headers["Content-Type"], modified_encoder.content_type)

        self.assertTrue(os.path.exists(modified_seed_path))
        with open(modified_seed_path, "rb") as modified_seed:
            with open(image_path, "rb") as image:
                with open(seed_path, "rb") as seed: 
                    self.assertEqual(modified_seed.read(), image.read() + seed.read())
                    seed.close()
                image.close()
            modified_seed.close()

        encoder.fields["image"][1].close()
        modified_encoder.fields["image"][1].close()

if __name__ == '__main__':
    unittest.main()