import unittest
import os

from utils.request import get_request
from vulnerability_gap.vg6 import VG6_FileExtension

class TestVG6(unittest.TestCase):
    def test_modify_encoder(self):
        encoders = []
        headers = []
        filenames = [
            "VG6_seed.html.png",
            "VG6_seed.html;png",
            "VG6_seed.html.aabbcc",
            "VG6_seed.shtml",
            "VG6_seed.phtml",
            "VG6_seed.hTml",
            "VG6_seed.html...........",
            "VG6_seed.html%00.png",
            "VG6_seed.php3",
            "VG6_seed.php4",
            "VG6_seed.ufu",
            "VG6_seed"
        ]
        

        for filename in filenames:
            header, encoder = get_request()
            modified_encoder = VG6_FileExtension.modify_encoder(encoder, filename)
            headers.append(header)
            encoders.append(modified_encoder)
            encoder.fields["image"][1].close()

        for i in range(len(filenames)):
            self.assertEqual(headers[i]["Connection"], "keep-alive")
            self.assertEqual(headers[i]["User-Agent"], os.getenv("USER_AGENT"))
            self.assertEqual(headers[i]["Content-Type"], encoders[i].content_type)

            self.assertEqual(len(encoders[i].fields), 2)
            self.assertEqual(encoders[i].fields["image"][0], filenames[i])

            encoders[i].fields["image"][1].close()



if __name__ == '__main__':
    unittest.main()