import requests

from requests_toolbelt.multipart.encoder import MultipartEncoder
from utils.request import get_request
from utils.utils import is_vulnerable

class VG3_InsertHTMLtoPNG:
    def execute(file_upload_url):
        headers, encoder = get_request()
        modified_encoder = VG3_InsertHTMLtoPNG.modify_encoder(encoder)

        response = requests.post(file_upload_url, data=modified_encoder, headers=headers)
        status = "Vulnerable" if is_vulnerable(response.text, response.status_code) else "Not Vulnerable"

        encoder.fields["image"][1].close()
        modified_encoder.fields["image"][1].close()

        return {
            "ID": "VG3",
            "Name": "Inserting Seed Into Metadata",
            "Score": "6.3",
            "Severity": "Medium",
            "Status": status,
        }
    
    def modify_encoder(encoder):
        seed_path = "./resources/seed.html"
        image_path = "./resources/test.png"
        modified_seed_path = "./resources/modified/VG3_modified_test.png"

        with open(modified_seed_path, "wb") as modified_seed:
            with open(image_path, "rb") as image:
                with open(seed_path, "rb") as seed:
                    modified_seed.write(image.read())
                    modified_seed.write(seed.read())
                    seed.close()
                image.close()
            modified_seed.close()

        modified_encoder = MultipartEncoder(
            fields={'image': ('VG3_modified_test.png', open(modified_seed_path, 'rb'), 'image/png'), "submit": "submit"},
            boundary=encoder.boundary[2:],
        )

        return modified_encoder