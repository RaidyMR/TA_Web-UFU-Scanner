import requests

from requests_toolbelt.multipart.encoder import MultipartEncoder
from utils.request import get_request
from utils.utils import is_vulnerable

class VG4_IncreaseSize:
    def execute(file_upload_url):
        headers, encoder = get_request()
        modified_encoder = VG4_IncreaseSize.modify_encoder(encoder)

        response = requests.post(file_upload_url, data=modified_encoder, headers=headers)
        status = "Vulnerable" if is_vulnerable(response.text, response.status_code) else "Not Vulnerable"

        encoder.fields["image"][1].close()
        modified_encoder.fields["image"][1].close()
        
        return {
            "ID": "VG4",
            "Name": "Increasing File Size",
            "Score": "8.2",
            "Severity": "High",
            "Status": status,
        }

    def modify_encoder(encoder):
        image_path = "./resources/test.png"
        modified_image_path = "./resources/modified/VG4_modified_test.png"
        
        with open(modified_image_path, "wb") as modified_image:
            with open(image_path, "rb") as image:
                modified_image.write(image.read()*10000)
                image.close()
            modified_image.close()
            
        modified_encoder = MultipartEncoder(
            fields={'image': ('VG4_modified_test.png', open(modified_image_path, 'rb'), 'image/png'), "submit": "submit"},
            boundary=encoder.boundary[2:],
        )

        return modified_encoder