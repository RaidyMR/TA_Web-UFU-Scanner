import requests

from requests_toolbelt.multipart.encoder import MultipartEncoder
from utils.request import get_request
from utils.utils import is_vulnerable

class VG6_FileExtension:    
    def execute(file_upload_url):
        filenames = [
            "VG6_seed.html.png",
            "VG6_seed.html;png",
            "VG6_seed.html.aabbcc",
            "VG6_seed.shtml",
            "VG6_seed.phtml",
            "VG6_seed.hTml",
            "VG6_seed.html...........",
            "VG6_seed.html%00.png",
            "VG6_seed.php3",
            "VG6_seed.php4",
            "VG6_seed.ufu",
            "VG6_seed"
        ]

        for filename in filenames:
            headers, encoder = get_request()
            modified_encoder = VG6_FileExtension.modify_encoder(encoder, filename)
            
            response = requests.post(file_upload_url, data=modified_encoder, headers=headers)
            status = "Vulnerable" if is_vulnerable(response.text, response.status_code) else "Not Vulnerable"
            
            encoder.fields["image"][1].close()
            modified_encoder.fields["image"][1].close()

            if status == "Vulnerable":
                break

        return {
            "ID": "VG6",
            "Name": "Modify File Extension",
            "Score": "6.3",
            "Severity": "Medium",
            "Status": status,
        }
    
    def modify_encoder(encoder, filename):
        image_path = "./resources/test.png"
        
        modified_encoder = MultipartEncoder(
            fields={'image': (filename, open(image_path, "rb"), "image/png"), "submit": "submit"},
            boundary=encoder.boundary[2:],
        )

        return modified_encoder

