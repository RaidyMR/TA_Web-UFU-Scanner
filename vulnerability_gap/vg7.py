import requests

from utils.request import get_request
from requests_toolbelt.multipart.encoder import MultipartEncoder

from utils.utils import is_vulnerable

class VG7_AddingResourceHeader:
    def execute(file_upload_url):
        headers, encoder = get_request()
        modified_encoder = VG7_AddingResourceHeader.prepending_resource_header(encoder)
        response = requests.post(file_upload_url, data=modified_encoder, headers=headers)   

        encoder.fields["image"][1].close()
        modified_encoder.fields["image"][1].close()

        if is_vulnerable(response.text, response.status_code) == False:
            headers, encoder = get_request()
            modified_encoder = VG7_AddingResourceHeader.appending_resource_header(encoder)
            response = requests.post(file_upload_url, data=modified_encoder, headers=headers)
            
            encoder.fields["image"][1].close()
            modified_encoder.fields["image"][1].close()


        status = "Vulnerable" if is_vulnerable(response.text, response.status_code) else "Not Vulnerable"

        return {
            "ID": "VG7",
            "Name": "Adding Resource Header",
            "Score": "6.3",
            "Severity": "Medium",
            "Status": status,
        }
    
    def prepending_resource_header(encoder):
        seed_path = "./resources/seed.html"
        image_path = "./resources/test.png"
        modified_seed_path = "./resources/modified/VG7.1_modified_seed.html"

        with open(modified_seed_path, "wb") as modified_seed:
            with open(image_path, "rb") as image:
                with open(seed_path, "rb") as seed:
                    modified_seed.write(image.read()[:1024])
                    modified_seed.write(seed.read())
                    seed.close()
                image.close()
            modified_seed.close()

        encoder = MultipartEncoder(
            fields={'image': ('VG7.1_modified_seed.html', open(modified_seed_path, 'rb'), 'text/plain'), "submit": "submit"},
            boundary=encoder.boundary[2:],
        )

        return encoder

    def appending_resource_header(encoder):
        seed_path = "./resources/seed.html"
        image_path = "./resources/test.png"
        modified_seed_path = "./resources/modified/VG7.2_modified_seed.html"

        with open(modified_seed_path, "wb") as modified_seed:
            with open(image_path, "rb") as image:
                with open(seed_path, "rb") as seed:
                    modified_seed.write(seed.read())
                    modified_seed.write(image.read(8))
                    seed.close()
                image.close()
            modified_seed.close()

        encoder = MultipartEncoder(
            fields={'image': ('VG7.2_modified_seed.html', open(modified_seed_path, 'rb'), 'text/plain'), "submit": "submit"},
            boundary=encoder.boundary[2:],
        )

        return encoder
